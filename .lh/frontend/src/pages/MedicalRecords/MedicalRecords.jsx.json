{
    "sourceFile": "frontend/src/pages/MedicalRecords/MedicalRecords.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1749585583602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1749585583602,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { medicalRecordsApi } from '../../services/api';\r\nimport { SearchIcon, PlusIcon } from '../../icons';\r\nimport Pagination from '../../components/common/Pagination';\r\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\r\n\r\nconst MedicalRecords = () => {\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const patientIdParam = queryParams.get('patientId');\r\n\r\n  const [records, setRecords] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 1,\r\n    totalPages: 0,\r\n    totalCount: 0,\r\n    limit: 10\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [patientId, setPatientId] = useState(patientIdParam || '');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [sortBy, setSortBy] = useState('record_date');\r\n  const [sortOrder, setSortOrder] = useState('DESC');\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n\r\n  const fetchRecords = async (\r\n    page = 1,\r\n    search = searchQuery,\r\n    patient = patientId,\r\n    sDate = startDate,\r\n    eDate = endDate,\r\n    sort = sortBy,\r\n    order = sortOrder\r\n  ) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await medicalRecordsApi.getAll({\r\n        page,\r\n        limit: pagination.limit,\r\n        search,\r\n        patientId: patient,\r\n        startDate: sDate,\r\n        endDate: eDate,\r\n        sortBy: sort,\r\n        sortOrder: order\r\n      });\r\n      \r\n      if (response.success) {\r\n        setRecords(response.data.medicalRecords);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        throw new Error(response.error || 'Failed to fetch medical records');\r\n      }\r\n      \r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Error fetching medical records:', err);\r\n      setError('Failed to load medical records. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchRecords(1, '', patientIdParam || '');\r\n  }, [patientIdParam]);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    fetchRecords(1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setSearchQuery('');\r\n    setPatientId(patientIdParam || '');\r\n    setStartDate('');\r\n    setEndDate('');\r\n    setSortBy('record_date');\r\n    setSortOrder('DESC');\r\n    fetchRecords(1, '', patientIdParam || '', '', '', 'record_date', 'DESC');\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    const newSortOrder = field === sortBy && sortOrder === 'ASC' ? 'DESC' : 'ASC';\r\n    setSortBy(field);\r\n    setSortOrder(newSortOrder);\r\n    fetchRecords(1, searchQuery, patientId, startDate, endDate, field, newSortOrder);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    fetchRecords(page);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString();\r\n  };\r\n\r\n  const handleNewRecord = async (formData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await medicalRecordsApi.create(formData);\r\n      if (response.success) {\r\n        fetchRecords();\r\n        setShowAddForm(false);\r\n      } else {\r\n        throw new Error(response.error || 'Failed to create medical record');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error creating medical record:', err);\r\n      setError('Failed to create medical record. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sm:flex sm:items-center justify-between mb-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-semibold text-gray-900\">Medical Records</h1>\r\n          <p className=\"mt-2 text-sm text-gray-700\">\r\n            View and manage patient medical records\r\n          </p>\r\n        </div>\r\n        <button\r\n          onClick={() => setShowAddForm(!showAddForm)}\r\n          className=\"mt-4 sm:mt-0 inline-flex items-center justify-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n        >\r\n          <PlusIcon className=\"h-4 w-4 mr-2\" />\r\n          New Record\r\n        </button>\r\n      </div>\r\n\r\n      {showAddForm && (\r\n        <div className=\"bg-white shadow mb-6 rounded-lg overflow-hidden\">\r\n          <div className=\"px-4 py-5 sm:p-6\">\r\n            <h2 className=\"text-lg leading-6 font-medium text-gray-900\">Add New Medical Record</h2>\r\n            <AddRecordForm onSubmit={handleNewRecord} onCancel={() => setShowAddForm(false)} patientId={patientId} />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n        {/* Search and filter bar */}\r\n        <div className=\"px-4 py-5 sm:p-6 border-b border-gray-200\">\r\n          <form onSubmit={handleSearch} className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\r\n              {/* Search field */}\r\n              <div>\r\n                <label htmlFor=\"search\" className=\"block text-sm font-medium text-gray-700\">Search</label>\r\n                <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <SearchIcon className=\"h-5 w-5 text-gray-400\" />\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    id=\"search\"\r\n                    className=\"focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 pr-12 sm:text-sm border-gray-300 rounded-md\"\r\n                    placeholder=\"Search by diagnosis...\"\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Patient ID filter */}\r\n              <div>\r\n                <label htmlFor=\"patientId\" className=\"block text-sm font-medium text-gray-700\">Patient ID</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"patientId\"\r\n                  name=\"patientId\"\r\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                  placeholder=\"Enter patient ID...\"\r\n                  value={patientId}\r\n                  onChange={(e) => setPatientId(e.target.value)}\r\n                  disabled={!!patientIdParam}\r\n                />\r\n              </div>\r\n\r\n              {/* Date range filters */}\r\n              <div>\r\n                <label htmlFor=\"startDate\" className=\"block text-sm font-medium text-gray-700\">Start Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"startDate\"\r\n                  name=\"startDate\"\r\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                  value={startDate}\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"endDate\" className=\"block text-sm font-medium text-gray-700\">End Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"endDate\"\r\n                  name=\"endDate\"\r\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                  value={endDate}\r\n                  onChange={(e) => setEndDate(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleReset}\r\n                className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n              >\r\n                Apply Filters\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Error message */}\r\n        {error && (\r\n          <div className=\"bg-red-50 border-l-4 border-red-400 p-4\">\r\n            <div className=\"flex\">\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm text-red-700\">{error}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Records Table */}\r\n        <div className=\"overflow-x-auto\">\r\n          {loading ? (\r\n            <LoadingSpinner />\r\n          ) : (\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n                    onClick={() => handleSort('record_date')}\r\n                  >\r\n                    Date\r\n                    {sortBy === 'record_date' && (\r\n                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n                    )}\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                  >\r\n                    Patient\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n                    onClick={() => handleSort('diagnosis')}\r\n                  >\r\n                    Diagnosis\r\n                    {sortBy === 'diagnosis' && (\r\n                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n                    )}\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                  >\r\n                    Treatment\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {records.length > 0 ? (\r\n                  records.map((record) => (\r\n                    <tr key={record.record_id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">{formatDate(record.record_date)}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          <div>\r\n                            <div className=\"text-sm font-medium text-gray-900\">\r\n                              {record.patient_first_name} {record.patient_last_name}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-500\">\r\n                              {record.patient_gender}, {record.patient_age} years\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"text-sm text-gray-900\">{record.diagnosis}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">\r\n                        <div className=\"text-sm text-gray-900\">{record.treatment}</div>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"4\" className=\"px-6 py-4 text-center text-gray-500\">\r\n                      No medical records found\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n\r\n        {/* Pagination */}\r\n        {!loading && records.length > 0 && (\r\n          <Pagination\r\n            currentPage={pagination.currentPage}\r\n            totalPages={pagination.totalPages}\r\n            onPageChange={handlePageChange}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddRecordForm = ({ onSubmit, onCancel, patientId = '' }) => {\r\n  const [formData, setFormData] = useState({\r\n    patient_id: patientId,\r\n    diagnosis: '',\r\n    treatment: '',\r\n    record_date: new Date().toISOString().split('T')[0]\r\n  });\r\n  const [formError, setFormError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!formData.patient_id) {\r\n      setFormError('Patient ID is required');\r\n      return;\r\n    }\r\n    \r\n    if (!formData.diagnosis) {\r\n      setFormError('Diagnosis is required');\r\n      return;\r\n    }\r\n    \r\n    if (!formData.treatment) {\r\n      setFormError('Treatment is required');\r\n      return;\r\n    }\r\n    \r\n    onSubmit(formData);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"mt-4\">\r\n      {formError && (\r\n        <div className=\"bg-red-50 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n          {formError}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\r\n        <div>\r\n          <label htmlFor=\"patient_id\" className=\"block text-sm font-medium text-gray-700\">Patient ID *</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"patient_id\"\r\n            name=\"patient_id\"\r\n            value={formData.patient_id}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            required\r\n            disabled={!!patientId}\r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label htmlFor=\"record_date\" className=\"block text-sm font-medium text-gray-700\">Record Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"record_date\"\r\n            name=\"record_date\"\r\n            value={formData.record_date}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"sm:col-span-2\">\r\n          <label htmlFor=\"diagnosis\" className=\"block text-sm font-medium text-gray-700\">Diagnosis *</label>\r\n          <textarea\r\n            id=\"diagnosis\"\r\n            name=\"diagnosis\"\r\n            rows={3}\r\n            value={formData.diagnosis}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"sm:col-span-2\">\r\n          <label htmlFor=\"treatment\" className=\"block text-sm font-medium text-gray-700\">Treatment *</label>\r\n          <textarea\r\n            id=\"treatment\"\r\n            name=\"treatment\"\r\n            rows={3}\r\n            value={formData.treatment}\r\n            onChange={handleChange}\r\n            className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"mt-4 flex justify-end space-x-3\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={onCancel}\r\n          className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n        >\r\n          Save Record\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MedicalRecords;\r\n"
        }
    ]
}