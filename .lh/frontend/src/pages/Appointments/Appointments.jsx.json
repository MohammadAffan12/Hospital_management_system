{
    "sourceFile": "frontend/src/pages/Appointments/Appointments.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1749585583601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749639596530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,117 +1,73 @@\n import React, { useState, useEffect } from 'react';\r\n import { Link } from 'react-router-dom';\r\n-import { appointmentsApi, doctorsApi } from '../../services/api';\r\n-import { SearchIcon, PlusIcon } from '../../icons';\r\n-import Pagination from '../../components/common/Pagination';\r\n+import { PlusIcon } from '../../icons';\r\n import LoadingSpinner from '../../components/common/LoadingSpinner';\r\n \r\n const Appointments = () => {\r\n   const [appointments, setAppointments] = useState([]);\r\n-  const [pagination, setPagination] = useState({\r\n-    currentPage: 1,\r\n-    totalPages: 0,\r\n-    totalCount: 0,\r\n-    limit: 10\r\n-  });\r\n   const [loading, setLoading] = useState(true);\r\n   const [error, setError] = useState(null);\r\n-  const [searchQuery, setSearchQuery] = useState('');\r\n-  const [selectedStatus, setSelectedStatus] = useState('');\r\n-  const [selectedDoctor, setSelectedDoctor] = useState('');\r\n-  const [specializations, setSpecializations] = useState([]);\r\n-  const [selectedSpecialization, setSelectedSpecialization] = useState('');\r\n-  const [startDate, setStartDate] = useState('');\r\n-  const [endDate, setEndDate] = useState('');\r\n-  const [sortBy, setSortBy] = useState('appointment_date');\r\n-  const [sortOrder, setSortOrder] = useState('DESC');\r\n \r\n   useEffect(() => {\r\n-    fetchSpecializations();\r\n+    // Fetch appointments logic will go here\r\n+    const fetchAppointments = async () => {\r\n+      try {\r\n+        setLoading(true);\r\n+        // Mock data for now - will be replaced with actual API call\r\n+        const mockData = {\r\n+          success: true,\r\n+          data: {\r\n+            appointments: [\r\n+              {\r\n+                appointment_id: 1,\r\n+                appointment_date: new Date().toISOString(),\r\n+                status: 'Scheduled',\r\n+                patient_first_name: '',\r\n+                patient_last_name: 'Doe',\r\n+                patient_phone: '123-456-7890',\r\n+                doctor_first_name: 'Jane',\r\n+                doctor_last_name: 'Smith',\r\n+                specialization: 'Cardiology'\r\n+              },\r\n+              {\r\n+                appointment_id: 2,\r\n+                appointment_date: new Date(Date.now() + 86400000).toISOString(),\r\n+                status: 'Scheduled',\r\n+                patient_first_name: 'Alice',\r\n+                patient_last_name: 'Johnson',\r\n+                patient_phone: '234-567-8901',\r\n+                doctor_first_name: 'Robert',\r\n+                doctor_last_name: 'Williams',\r\n+                specialization: 'Neurology'\r\n+              }\r\n+            ],\r\n+            pagination: {\r\n+              currentPage: 1,\r\n+              totalPages: 1,\r\n+              totalCount: 2\r\n+            }\r\n+          }\r\n+        };\r\n+        \r\n+        setAppointments(mockData.data.appointments);\r\n+        setError(null);\r\n+      } catch (err) {\r\n+        console.error('Error fetching appointments:', err);\r\n+        setError('Failed to load appointments. Please try again.');\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n     fetchAppointments();\r\n   }, []);\r\n \r\n-  const fetchSpecializations = async () => {\r\n-    try {\r\n-      const response = await doctorsApi.getSpecializations();\r\n-      if (response.success) {\r\n-        setSpecializations(response.data.specializations);\r\n-      }\r\n-    } catch (err) {\r\n-      console.error('Error fetching specializations:', err);\r\n-    }\r\n+  const formatDate = (dateString) => {\r\n+    const date = new Date(dateString);\r\n+    return date.toLocaleString();\r\n   };\r\n \r\n-  const fetchAppointments = async (\r\n-    page = 1,\r\n-    search = searchQuery,\r\n-    status = selectedStatus,\r\n-    doctor = selectedDoctor,\r\n-    spec = selectedSpecialization,\r\n-    sDate = startDate,\r\n-    eDate = endDate,\r\n-    sort = sortBy,\r\n-    order = sortOrder\r\n-  ) => {\r\n-    try {\r\n-      setLoading(true);\r\n-      const response = await appointmentsApi.getAll({\r\n-        page,\r\n-        limit: pagination.limit,\r\n-        search,\r\n-        status,\r\n-        doctorId: doctor,\r\n-        specialization: spec,\r\n-        startDate: sDate,\r\n-        endDate: eDate,\r\n-        sortBy: sort,\r\n-        sortOrder: order\r\n-      });\r\n-      \r\n-      if (response.success) {\r\n-        setAppointments(response.data.appointments);\r\n-        setPagination(response.data.pagination);\r\n-      } else {\r\n-        throw new Error(response.error || 'Failed to fetch appointments');\r\n-      }\r\n-      \r\n-      setError(null);\r\n-    } catch (err) {\r\n-      console.error('Error fetching appointments:', err);\r\n-      setError('Failed to load appointments. Please try again.');\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  const handleSearch = (e) => {\r\n-    e.preventDefault();\r\n-    fetchAppointments(1);\r\n-  };\r\n-\r\n-  const handleReset = () => {\r\n-    setSearchQuery('');\r\n-    setSelectedStatus('');\r\n-    setSelectedDoctor('');\r\n-    setSelectedSpecialization('');\r\n-    setStartDate('');\r\n-    setEndDate('');\r\n-    setSortBy('appointment_date');\r\n-    setSortOrder('DESC');\r\n-    fetchAppointments(1, '', '', '', '', '', '', 'appointment_date', 'DESC');\r\n-  };\r\n-\r\n-  const handleSort = (field) => {\r\n-    const newSortOrder = field === sortBy && sortOrder === 'ASC' ? 'DESC' : 'ASC';\r\n-    setSortBy(field);\r\n-    setSortOrder(newSortOrder);\r\n-    fetchAppointments(1, searchQuery, selectedStatus, selectedDoctor, selectedSpecialization, startDate, endDate, field, newSortOrder);\r\n-  };\r\n-\r\n-  const handlePageChange = (page) => {\r\n-    fetchAppointments(page);\r\n-  };\r\n-\r\n   const getStatusClass = (status) => {\r\n     switch (status) {\r\n       case 'Scheduled':\r\n         return 'bg-blue-100 text-blue-800';\r\n@@ -125,13 +81,8 @@\n         return 'bg-gray-100 text-gray-800';\r\n     }\r\n   };\r\n \r\n-  const formatDate = (dateString) => {\r\n-    const date = new Date(dateString);\r\n-    return date.toLocaleString();\r\n-  };\r\n-\r\n   return (\r\n     <div>\r\n       <div className=\"sm:flex sm:items-center justify-between mb-6\">\r\n         <div>\r\n@@ -149,111 +100,8 @@\n         </Link>\r\n       </div>\r\n \r\n       <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n-        {/* Search and filter bar */}\r\n-        <div className=\"px-4 py-5 sm:p-6 border-b border-gray-200\">\r\n-          <form onSubmit={handleSearch} className=\"space-y-4\">\r\n-            <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\r\n-              {/* Search field */}\r\n-              <div>\r\n-                <label htmlFor=\"search\" className=\"block text-sm font-medium text-gray-700\">Search</label>\r\n-                <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n-                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n-                    <SearchIcon className=\"h-5 w-5 text-gray-400\" />\r\n-                  </div>\r\n-                  <input\r\n-                    type=\"text\"\r\n-                    name=\"search\"\r\n-                    id=\"search\"\r\n-                    className=\"focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 pr-12 sm:text-sm border-gray-300 rounded-md\"\r\n-                    placeholder=\"Patient or doctor name...\"\r\n-                    value={searchQuery}\r\n-                    onChange={(e) => setSearchQuery(e.target.value)}\r\n-                  />\r\n-                </div>\r\n-              </div>\r\n-              \r\n-              {/* Status filter */}\r\n-              <div>\r\n-                <label htmlFor=\"status\" className=\"block text-sm font-medium text-gray-700\">Status</label>\r\n-                <select\r\n-                  id=\"status\"\r\n-                  name=\"status\"\r\n-                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\r\n-                  value={selectedStatus}\r\n-                  onChange={(e) => setSelectedStatus(e.target.value)}\r\n-                >\r\n-                  <option value=\"\">All Statuses</option>\r\n-                  <option value=\"Scheduled\">Scheduled</option>\r\n-                  <option value=\"Completed\">Completed</option>\r\n-                  <option value=\"Cancelled\">Cancelled</option>\r\n-                  <option value=\"No-Show\">No-Show</option>\r\n-                </select>\r\n-              </div>\r\n-\r\n-              {/* Specialization filter */}\r\n-              <div>\r\n-                <label htmlFor=\"specialization\" className=\"block text-sm font-medium text-gray-700\">Specialization</label>\r\n-                <select\r\n-                  id=\"specialization\"\r\n-                  name=\"specialization\"\r\n-                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\r\n-                  value={selectedSpecialization}\r\n-                  onChange={(e) => setSelectedSpecialization(e.target.value)}\r\n-                >\r\n-                  <option value=\"\">All Specializations</option>\r\n-                  {specializations.map((spec) => (\r\n-                    <option key={spec} value={spec}>{spec}</option>\r\n-                  ))}\r\n-                </select>\r\n-              </div>\r\n-            </div>\r\n-\r\n-            <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\r\n-              {/* Date range filters */}\r\n-              <div>\r\n-                <label htmlFor=\"startDate\" className=\"block text-sm font-medium text-gray-700\">Start Date</label>\r\n-                <input\r\n-                  type=\"date\"\r\n-                  id=\"startDate\"\r\n-                  name=\"startDate\"\r\n-                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n-                  value={startDate}\r\n-                  onChange={(e) => setStartDate(e.target.value)}\r\n-                />\r\n-              </div>\r\n-              <div>\r\n-                <label htmlFor=\"endDate\" className=\"block text-sm font-medium text-gray-700\">End Date</label>\r\n-                <input\r\n-                  type=\"date\"\r\n-                  id=\"endDate\"\r\n-                  name=\"endDate\"\r\n-                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n-                  value={endDate}\r\n-                  onChange={(e) => setEndDate(e.target.value)}\r\n-                />\r\n-              </div>\r\n-            </div>\r\n-\r\n-            <div className=\"flex justify-end space-x-3\">\r\n-              <button\r\n-                type=\"button\"\r\n-                onClick={handleReset}\r\n-                className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n-              >\r\n-                Reset\r\n-              </button>\r\n-              <button\r\n-                type=\"submit\"\r\n-                className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n-              >\r\n-                Apply Filters\r\n-              </button>\r\n-            </div>\r\n-          </form>\r\n-        </div>\r\n-\r\n         {/* Error message */}\r\n         {error && (\r\n           <div className=\"bg-red-50 border-l-4 border-red-400 p-4\">\r\n             <div className=\"flex\">\r\n@@ -273,35 +121,23 @@\n               <thead className=\"bg-gray-50\">\r\n                 <tr>\r\n                   <th\r\n                     scope=\"col\"\r\n-                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n-                    onClick={() => handleSort('appointment_date')}\r\n+                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                   >\r\n                     Date & Time\r\n-                    {sortBy === 'appointment_date' && (\r\n-                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n-                    )}\r\n                   </th>\r\n                   <th\r\n                     scope=\"col\"\r\n-                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n-                    onClick={() => handleSort('patient_name')}\r\n+                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                   >\r\n                     Patient\r\n-                    {sortBy === 'patient_name' && (\r\n-                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n-                    )}\r\n                   </th>\r\n                   <th\r\n                     scope=\"col\"\r\n-                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n-                    onClick={() => handleSort('doctor_name')}\r\n+                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                   >\r\n                     Doctor\r\n-                    {sortBy === 'doctor_name' && (\r\n-                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n-                    )}\r\n                   </th>\r\n                   <th\r\n                     scope=\"col\"\r\n                     className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n@@ -309,15 +145,11 @@\n                     Specialization\r\n                   </th>\r\n                   <th\r\n                     scope=\"col\"\r\n-                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n-                    onClick={() => handleSort('status')}\r\n+                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                   >\r\n                     Status\r\n-                    {sortBy === 'status' && (\r\n-                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n-                    )}\r\n                   </th>\r\n                   <th\r\n                     scope=\"col\"\r\n                     className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n@@ -384,17 +216,8 @@\n               </tbody>\r\n             </table>\r\n           )}\r\n         </div>\r\n-\r\n-        {/* Pagination */}\r\n-        {!loading && appointments.length > 0 && (\r\n-          <Pagination\r\n-            currentPage={pagination.currentPage}\r\n-            totalPages={pagination.totalPages}\r\n-            onPageChange={handlePageChange}\r\n-          />\r\n-        )}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1749639605739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,10 +21,10 @@\n               {\r\n                 appointment_id: 1,\r\n                 appointment_date: new Date().toISOString(),\r\n                 status: 'Scheduled',\r\n-                patient_first_name: '',\r\n-                patient_last_name: 'Doe',\r\n+                patient_first_name: 'Affan',\r\n+                patient_last_name: 'Ashfaq',\r\n                 patient_phone: '123-456-7890',\r\n                 doctor_first_name: 'Jane',\r\n                 doctor_last_name: 'Smith',\r\n                 specialization: 'Cardiology'\r\n"
                },
                {
                    "date": 1749639610920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n                 status: 'Scheduled',\r\n                 patient_first_name: 'Affan',\r\n                 patient_last_name: 'Ashfaq',\r\n                 patient_phone: '123-456-7890',\r\n-                doctor_first_name: 'Jane',\r\n+                doctor_first_name: '',\r\n                 doctor_last_name: 'Smith',\r\n                 specialization: 'Cardiology'\r\n               },\r\n               {\r\n"
                },
                {
                    "date": 1749639617085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n                 status: 'Scheduled',\r\n                 patient_first_name: 'Affan',\r\n                 patient_last_name: 'Ashfaq',\r\n                 patient_phone: '123-456-7890',\r\n-                doctor_first_name: 'S',\r\n+                doctor_first_name: 'Shahzeb',\r\n                 doctor_last_name: 'Smith',\r\n                 specialization: 'Cardiology'\r\n               },\r\n               {\r\n"
                },
                {
                    "date": 1749639634478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,225 @@\n+import React, { useState, useEffect } from 'react';\r\n+import { Link } from 'react-router-dom';\r\n+import { PlusIcon } from '../../icons';\r\n+import LoadingSpinner from '../../components/common/LoadingSpinner';\r\n+\r\n+const Appointments = () => {\r\n+  const [appointments, setAppointments] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [error, setError] = useState(null);\r\n+\r\n+  useEffect(() => {\r\n+    // Fetch appointments logic will go here\r\n+    const fetchAppointments = async () => {\r\n+      try {\r\n+        setLoading(true);\r\n+        // Mock data for now - will be replaced with actual API call\r\n+        const mockData = {\r\n+          success: true,\r\n+          data: {\r\n+            appointments: [\r\n+              {\r\n+                appointment_id: 1,\r\n+                appointment_date: new Date().toISOString(),\r\n+                status: 'Scheduled',\r\n+                patient_first_name: 'Affan',\r\n+                patient_last_name: 'Ashfaq',\r\n+                patient_phone: '123-456-7890',\r\n+                doctor_first_name: 'Shahzeb',\r\n+                doctor_last_name: 'soomro',\r\n+                specialization: 'Cardiology'\r\n+              },\r\n+              {\r\n+                appointment_id: 2,\r\n+                appointment_date: new Date(Date.now() + 86400000).toISOString(),\r\n+                status: 'Scheduled',\r\n+                patient_first_name: 'Ali',\r\n+                patient_last_name: 'Hassan',\r\n+                patient_phone: '234-567-8901',\r\n+                doctor_first_name: 'Robert',\r\n+                doctor_last_name: 'Williams',\r\n+                specialization: 'Neurology'\r\n+              }\r\n+            ],\r\n+            pagination: {\r\n+              currentPage: 1,\r\n+              totalPages: 1,\r\n+              totalCount: 2\r\n+            }\r\n+          }\r\n+        };\r\n+        \r\n+        setAppointments(mockData.data.appointments);\r\n+        setError(null);\r\n+      } catch (err) {\r\n+        console.error('Error fetching appointments:', err);\r\n+        setError('Failed to load appointments. Please try again.');\r\n+      } finally {\r\n+        setLoading(false);\r\n+      }\r\n+    };\r\n+\r\n+    fetchAppointments();\r\n+  }, []);\r\n+\r\n+  const formatDate = (dateString) => {\r\n+    const date = new Date(dateString);\r\n+    return date.toLocaleString();\r\n+  };\r\n+\r\n+  const getStatusClass = (status) => {\r\n+    switch (status) {\r\n+      case 'Scheduled':\r\n+        return 'bg-blue-100 text-blue-800';\r\n+      case 'Completed':\r\n+        return 'bg-green-100 text-green-800';\r\n+      case 'Cancelled':\r\n+        return 'bg-red-100 text-red-800';\r\n+      case 'No-Show':\r\n+        return 'bg-yellow-100 text-yellow-800';\r\n+      default:\r\n+        return 'bg-gray-100 text-gray-800';\r\n+    }\r\n+  };\r\n+\r\n+  return (\r\n+    <div>\r\n+      <div className=\"sm:flex sm:items-center justify-between mb-6\">\r\n+        <div>\r\n+          <h1 className=\"text-2xl font-semibold text-gray-900\">Appointments</h1>\r\n+          <p className=\"mt-2 text-sm text-gray-700\">\r\n+            Schedule and manage patient appointments\r\n+          </p>\r\n+        </div>\r\n+        <Link\r\n+          to=\"/appointments/add\"\r\n+          className=\"mt-4 sm:mt-0 inline-flex items-center justify-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n+        >\r\n+          <PlusIcon className=\"h-4 w-4 mr-2\" />\r\n+          New Appointment\r\n+        </Link>\r\n+      </div>\r\n+\r\n+      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n+        {/* Error message */}\r\n+        {error && (\r\n+          <div className=\"bg-red-50 border-l-4 border-red-400 p-4\">\r\n+            <div className=\"flex\">\r\n+              <div className=\"ml-3\">\r\n+                <p className=\"text-sm text-red-700\">{error}</p>\r\n+              </div>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"overflow-x-auto\">\r\n+          {loading ? (\r\n+            <LoadingSpinner />\r\n+          ) : (\r\n+            <table className=\"min-w-full divide-y divide-gray-200\">\r\n+              <thead className=\"bg-gray-50\">\r\n+                <tr>\r\n+                  <th\r\n+                    scope=\"col\"\r\n+                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n+                  >\r\n+                    Date & Time\r\n+                  </th>\r\n+                  <th\r\n+                    scope=\"col\"\r\n+                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n+                  >\r\n+                    Patient\r\n+                  </th>\r\n+                  <th\r\n+                    scope=\"col\"\r\n+                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n+                  >\r\n+                    Doctor\r\n+                  </th>\r\n+                  <th\r\n+                    scope=\"col\"\r\n+                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n+                  >\r\n+                    Specialization\r\n+                  </th>\r\n+                  <th\r\n+                    scope=\"col\"\r\n+                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n+                  >\r\n+                    Status\r\n+                  </th>\r\n+                  <th\r\n+                    scope=\"col\"\r\n+                    className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n+                  >\r\n+                    Actions\r\n+                  </th>\r\n+                </tr>\r\n+              </thead>\r\n+              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n+                {appointments.length > 0 ? (\r\n+                  appointments.map((appointment) => (\r\n+                    <tr key={appointment.appointment_id}>\r\n+                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n+                        <div className=\"text-sm text-gray-900\">{formatDate(appointment.appointment_date)}</div>\r\n+                      </td>\r\n+                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n+                        <div className=\"flex items-center\">\r\n+                          <div>\r\n+                            <div className=\"text-sm font-medium text-gray-900\">\r\n+                              {appointment.patient_first_name} {appointment.patient_last_name}\r\n+                            </div>\r\n+                            <div className=\"text-sm text-gray-500\">\r\n+                              {appointment.patient_phone}\r\n+                            </div>\r\n+                          </div>\r\n+                        </div>\r\n+                      </td>\r\n+                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n+                        <div className=\"text-sm font-medium text-gray-900\">\r\n+                          Dr. {appointment.doctor_first_name} {appointment.doctor_last_name}\r\n+                        </div>\r\n+                      </td>\r\n+                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n+                        <div className=\"text-sm text-gray-900\">{appointment.specialization}</div>\r\n+                      </td>\r\n+                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n+                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusClass(appointment.status)}`}>\r\n+                          {appointment.status}\r\n+                        </span>\r\n+                      </td>\r\n+                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n+                        <Link\r\n+                          to={`/appointments/${appointment.appointment_id}`}\r\n+                          className=\"text-blue-600 hover:text-blue-900 mr-4\"\r\n+                        >\r\n+                          View\r\n+                        </Link>\r\n+                        <Link\r\n+                          to={`/appointments/${appointment.appointment_id}?edit=true`}\r\n+                          className=\"text-indigo-600 hover:text-indigo-900\"\r\n+                        >\r\n+                          Edit\r\n+                        </Link>\r\n+                      </td>\r\n+                    </tr>\r\n+                  ))\r\n+                ) : (\r\n+                  <tr>\r\n+                    <td colSpan=\"6\" className=\"px-6 py-4 text-center text-gray-500\">\r\n+                      No appointments found\r\n+                    </td>\r\n+                  </tr>\r\n+                )}\r\n+              </tbody>\r\n+            </table>\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default Appointments;\r\n"
                }
            ],
            "date": 1749585583601,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { appointmentsApi, doctorsApi } from '../../services/api';\r\nimport { SearchIcon, PlusIcon } from '../../icons';\r\nimport Pagination from '../../components/common/Pagination';\r\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\r\n\r\nconst Appointments = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 1,\r\n    totalPages: 0,\r\n    totalCount: 0,\r\n    limit: 10\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedStatus, setSelectedStatus] = useState('');\r\n  const [selectedDoctor, setSelectedDoctor] = useState('');\r\n  const [specializations, setSpecializations] = useState([]);\r\n  const [selectedSpecialization, setSelectedSpecialization] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [sortBy, setSortBy] = useState('appointment_date');\r\n  const [sortOrder, setSortOrder] = useState('DESC');\r\n\r\n  useEffect(() => {\r\n    fetchSpecializations();\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const fetchSpecializations = async () => {\r\n    try {\r\n      const response = await doctorsApi.getSpecializations();\r\n      if (response.success) {\r\n        setSpecializations(response.data.specializations);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching specializations:', err);\r\n    }\r\n  };\r\n\r\n  const fetchAppointments = async (\r\n    page = 1,\r\n    search = searchQuery,\r\n    status = selectedStatus,\r\n    doctor = selectedDoctor,\r\n    spec = selectedSpecialization,\r\n    sDate = startDate,\r\n    eDate = endDate,\r\n    sort = sortBy,\r\n    order = sortOrder\r\n  ) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await appointmentsApi.getAll({\r\n        page,\r\n        limit: pagination.limit,\r\n        search,\r\n        status,\r\n        doctorId: doctor,\r\n        specialization: spec,\r\n        startDate: sDate,\r\n        endDate: eDate,\r\n        sortBy: sort,\r\n        sortOrder: order\r\n      });\r\n      \r\n      if (response.success) {\r\n        setAppointments(response.data.appointments);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        throw new Error(response.error || 'Failed to fetch appointments');\r\n      }\r\n      \r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Error fetching appointments:', err);\r\n      setError('Failed to load appointments. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    fetchAppointments(1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setSearchQuery('');\r\n    setSelectedStatus('');\r\n    setSelectedDoctor('');\r\n    setSelectedSpecialization('');\r\n    setStartDate('');\r\n    setEndDate('');\r\n    setSortBy('appointment_date');\r\n    setSortOrder('DESC');\r\n    fetchAppointments(1, '', '', '', '', '', '', 'appointment_date', 'DESC');\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    const newSortOrder = field === sortBy && sortOrder === 'ASC' ? 'DESC' : 'ASC';\r\n    setSortBy(field);\r\n    setSortOrder(newSortOrder);\r\n    fetchAppointments(1, searchQuery, selectedStatus, selectedDoctor, selectedSpecialization, startDate, endDate, field, newSortOrder);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    fetchAppointments(page);\r\n  };\r\n\r\n  const getStatusClass = (status) => {\r\n    switch (status) {\r\n      case 'Scheduled':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'Completed':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'Cancelled':\r\n        return 'bg-red-100 text-red-800';\r\n      case 'No-Show':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sm:flex sm:items-center justify-between mb-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-semibold text-gray-900\">Appointments</h1>\r\n          <p className=\"mt-2 text-sm text-gray-700\">\r\n            Schedule and manage patient appointments\r\n          </p>\r\n        </div>\r\n        <Link\r\n          to=\"/appointments/add\"\r\n          className=\"mt-4 sm:mt-0 inline-flex items-center justify-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n        >\r\n          <PlusIcon className=\"h-4 w-4 mr-2\" />\r\n          New Appointment\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n        {/* Search and filter bar */}\r\n        <div className=\"px-4 py-5 sm:p-6 border-b border-gray-200\">\r\n          <form onSubmit={handleSearch} className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\r\n              {/* Search field */}\r\n              <div>\r\n                <label htmlFor=\"search\" className=\"block text-sm font-medium text-gray-700\">Search</label>\r\n                <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <SearchIcon className=\"h-5 w-5 text-gray-400\" />\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    id=\"search\"\r\n                    className=\"focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 pr-12 sm:text-sm border-gray-300 rounded-md\"\r\n                    placeholder=\"Patient or doctor name...\"\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Status filter */}\r\n              <div>\r\n                <label htmlFor=\"status\" className=\"block text-sm font-medium text-gray-700\">Status</label>\r\n                <select\r\n                  id=\"status\"\r\n                  name=\"status\"\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\r\n                  value={selectedStatus}\r\n                  onChange={(e) => setSelectedStatus(e.target.value)}\r\n                >\r\n                  <option value=\"\">All Statuses</option>\r\n                  <option value=\"Scheduled\">Scheduled</option>\r\n                  <option value=\"Completed\">Completed</option>\r\n                  <option value=\"Cancelled\">Cancelled</option>\r\n                  <option value=\"No-Show\">No-Show</option>\r\n                </select>\r\n              </div>\r\n\r\n              {/* Specialization filter */}\r\n              <div>\r\n                <label htmlFor=\"specialization\" className=\"block text-sm font-medium text-gray-700\">Specialization</label>\r\n                <select\r\n                  id=\"specialization\"\r\n                  name=\"specialization\"\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\r\n                  value={selectedSpecialization}\r\n                  onChange={(e) => setSelectedSpecialization(e.target.value)}\r\n                >\r\n                  <option value=\"\">All Specializations</option>\r\n                  {specializations.map((spec) => (\r\n                    <option key={spec} value={spec}>{spec}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\r\n              {/* Date range filters */}\r\n              <div>\r\n                <label htmlFor=\"startDate\" className=\"block text-sm font-medium text-gray-700\">Start Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"startDate\"\r\n                  name=\"startDate\"\r\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                  value={startDate}\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"endDate\" className=\"block text-sm font-medium text-gray-700\">End Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"endDate\"\r\n                  name=\"endDate\"\r\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                  value={endDate}\r\n                  onChange={(e) => setEndDate(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleReset}\r\n                className=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n              >\r\n                Apply Filters\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Error message */}\r\n        {error && (\r\n          <div className=\"bg-red-50 border-l-4 border-red-400 p-4\">\r\n            <div className=\"flex\">\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm text-red-700\">{error}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Table */}\r\n        <div className=\"overflow-x-auto\">\r\n          {loading ? (\r\n            <LoadingSpinner />\r\n          ) : (\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n                    onClick={() => handleSort('appointment_date')}\r\n                  >\r\n                    Date & Time\r\n                    {sortBy === 'appointment_date' && (\r\n                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n                    )}\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n                    onClick={() => handleSort('patient_name')}\r\n                  >\r\n                    Patient\r\n                    {sortBy === 'patient_name' && (\r\n                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n                    )}\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n                    onClick={() => handleSort('doctor_name')}\r\n                  >\r\n                    Doctor\r\n                    {sortBy === 'doctor_name' && (\r\n                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n                    )}\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                  >\r\n                    Specialization\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n                    onClick={() => handleSort('status')}\r\n                  >\r\n                    Status\r\n                    {sortBy === 'status' && (\r\n                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n                    )}\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                  >\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {appointments.length > 0 ? (\r\n                  appointments.map((appointment) => (\r\n                    <tr key={appointment.appointment_id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">{formatDate(appointment.appointment_date)}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          <div>\r\n                            <div className=\"text-sm font-medium text-gray-900\">\r\n                              {appointment.patient_first_name} {appointment.patient_last_name}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-500\">\r\n                              {appointment.patient_phone}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">\r\n                          Dr. {appointment.doctor_first_name} {appointment.doctor_last_name}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">{appointment.specialization}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusClass(appointment.status)}`}>\r\n                          {appointment.status}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        <Link\r\n                          to={`/appointments/${appointment.appointment_id}`}\r\n                          className=\"text-blue-600 hover:text-blue-900 mr-4\"\r\n                        >\r\n                          View\r\n                        </Link>\r\n                        <Link\r\n                          to={`/appointments/${appointment.appointment_id}?edit=true`}\r\n                          className=\"text-indigo-600 hover:text-indigo-900\"\r\n                        >\r\n                          Edit\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"6\" className=\"px-6 py-4 text-center text-gray-500\">\r\n                      No appointments found\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n\r\n        {/* Pagination */}\r\n        {!loading && appointments.length > 0 && (\r\n          <Pagination\r\n            currentPage={pagination.currentPage}\r\n            totalPages={pagination.totalPages}\r\n            onPageChange={handlePageChange}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n"
        }
    ]
}