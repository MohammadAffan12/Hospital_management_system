{
    "sourceFile": "frontend/src/pages/Appointments/AddAppointment.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1749586064538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1749586064538,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link, useSearchParams } from 'react-router-dom';\r\nimport { appointmentsApi, doctorsApi, patientsApi } from '../../services/api';\r\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\r\nimport { SearchIcon } from '../../icons';\r\n\r\nconst AddAppointment = () => {\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const initialPatientId = searchParams.get('patientId') || '';\r\n  const initialDoctorId = searchParams.get('doctorId') || '';\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [specializations, setSpecializations] = useState([]);\r\n  const [selectedSpecialization, setSelectedSpecialization] = useState('');\r\n  const [patientSearchQuery, setPatientSearchQuery] = useState('');\r\n  const [isSearchingPatients, setIsSearchingPatients] = useState(false);\r\n  \r\n  const [formData, setFormData] = useState({\r\n    patient_id: initialPatientId,\r\n    doctor_id: initialDoctorId,\r\n    appointment_date: '',\r\n    status: 'Scheduled',\r\n    notes: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (initialPatientId) {\r\n      fetchPatientDetails(initialPatientId);\r\n    }\r\n    \r\n    fetchDoctors();\r\n    fetchSpecializations();\r\n  }, [initialPatientId, initialDoctorId]);\r\n\r\n  const fetchPatientDetails = async (id) => {\r\n    try {\r\n      const response = await patientsApi.getById(id);\r\n      if (response.success) {\r\n        setPatients([{\r\n          patient_id: response.data.patient.patient_id,\r\n          first_name: response.data.patient.first_name,\r\n          last_name: response.data.patient.last_name,\r\n          phone_number: response.data.patient.phone_number\r\n        }]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching patient details:', err);\r\n    }\r\n  };\r\n\r\n  const fetchSpecializations = async () => {\r\n    try {\r\n      const response = await doctorsApi.getSpecializations();\r\n      if (response.success) {\r\n        setSpecializations(response.data.specializations);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching specializations:', err);\r\n    }\r\n  };\r\n\r\n  const fetchDoctors = async (specialization = '') => {\r\n    try {\r\n      const params = { limit: 50 };\r\n      if (specialization) {\r\n        params.specialization = specialization;\r\n      }\r\n      if (initialDoctorId) {\r\n        params.id = initialDoctorId;\r\n      }\r\n      \r\n      const response = await doctorsApi.getAll(params);\r\n      if (response.success) {\r\n        setDoctors(response.data.doctors);\r\n        \r\n        // If initial doctor ID was provided, select it\r\n        if (initialDoctorId && response.data.doctors.length > 0) {\r\n          const doctor = response.data.doctors.find(d => d.id === initialDoctorId);\r\n          if (doctor) {\r\n            setFormData(prev => ({\r\n              ...prev,\r\n              doctor_id: doctor.id\r\n            }));\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching doctors:', err);\r\n    }\r\n  };\r\n\r\n  const searchPatients = async () => {\r\n    if (!patientSearchQuery.trim()) return;\r\n    \r\n    setIsSearchingPatients(true);\r\n    try {\r\n      const response = await patientsApi.getAll({\r\n        search: patientSearchQuery,\r\n        limit: 10\r\n      });\r\n      \r\n      if (response.success) {\r\n        setPatients(response.data.patients);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error searching patients:', err);\r\n    } finally {\r\n      setIsSearchingPatients(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSpecializationChange = (e) => {\r\n    const value = e.target.value;\r\n    setSelectedSpecialization(value);\r\n    fetchDoctors(value);\r\n  };\r\n\r\n  const handlePatientSearchChange = (e) => {\r\n    setPatientSearchQuery(e.target.value);\r\n  };\r\n\r\n  const handlePatientSearchSubmit = (e) => {\r\n    e.preventDefault();\r\n    searchPatients();\r\n  };\r\n\r\n  const handleSelectPatient = (patient) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      patient_id: patient.patient_id\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    if (!formData.patient_id) {\r\n      setError('Please select a patient');\r\n      return;\r\n    }\r\n    \r\n    if (!formData.doctor_id) {\r\n      setError('Please select a doctor');\r\n      return;\r\n    }\r\n    \r\n    if (!formData.appointment_date) {\r\n      setError('Please select appointment date and time');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      const response = await appointmentsApi.create(formData);\r\n      \r\n      if (response.success) {\r\n        navigate(`/appointments/${response.data.appointment.appointment_id}`);\r\n      } else {\r\n        throw new Error(response.error || 'Failed to create appointment');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error creating appointment:', err);\r\n      setError(err.message || 'Failed to create appointment. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-semibold text-gray-900\">Schedule New Appointment</h1>\r\n        <Link\r\n          to=\"/appointments\"\r\n          className=\"px-4 py-2 border border-gray-300 rounded-md text-sm text-gray-700 bg-white hover:bg-gray-50\"\r\n        >\r\n          Cancel\r\n        </Link>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"mb-6 bg-red-50 border-l-4 border-red-400 p-4\">\r\n          <p className=\"text-sm text-red-700\">{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n        <div className=\"p-6\">\r\n          <form onSubmit={handleSubmit}>\r\n            {/* Patient Selection */}\r\n            <div className=\"mb-6\">\r\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Patient Information</h2>\r\n              \r\n              {!formData.patient_id ? (\r\n                <div>\r\n                  <form onSubmit={handlePatientSearchSubmit} className=\"mb-4\">\r\n                    <label htmlFor=\"patientSearch\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Search for a patient\r\n                    </label>\r\n                    <div className=\"flex\">\r\n                      <div className=\"relative flex-grow\">\r\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                          <SearchIcon className=\"h-5 w-5 text-gray-400\" />\r\n                        </div>\r\n                        <input\r\n                          type=\"text\"\r\n                          id=\"patientSearch\"\r\n                          value={patientSearchQuery}\r\n                          onChange={handlePatientSearchChange}\r\n                          placeholder=\"Search by name, email, or phone...\"\r\n                          className=\"focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 sm:text-sm border-gray-300 rounded-md\"\r\n                        />\r\n                      </div>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"ml-3 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none\"\r\n                      >\r\n                        Search\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n\r\n                  {isSearchingPatients ? (\r\n                    <LoadingSpinner size=\"small\" />\r\n                  ) : (\r\n                    <div className=\"overflow-y-auto max-h-60 border border-gray-200 rounded-md\">\r\n                      {patients.length > 0 ? (\r\n                        <ul className=\"divide-y divide-gray-200\">\r\n                          {patients.map((patient) => (\r\n                            <li key={patient.patient_id} className=\"p-3 hover:bg-gray-50\">\r\n                              <button\r\n                                type=\"button\"\r\n                                onClick={() => handleSelectPatient(patient)}\r\n                                className=\"w-full text-left\"\r\n                              >\r\n                                <div className=\"flex justify-between\">\r\n                                  <div className=\"font-medium\">{patient.first_name} {patient.last_name}</div>\r\n                                  <div className=\"text-sm text-gray-500\">{patient.phone_number}</div>\r\n                                </div>\r\n                                <div className=\"text-sm text-gray-500\">ID: {patient.patient_id}</div>\r\n                              </button>\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                      ) : (\r\n                        <p className=\"p-3 text-center text-gray-500\">No patients found. Try searching above.</p>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"flex justify-between items-center p-3 border rounded-md bg-blue-50\">\r\n                  <div>\r\n                    <p className=\"font-medium\">\r\n                      {patients.find(p => p.patient_id.toString() === formData.patient_id.toString())?.first_name || ''} {\r\n                        patients.find(p => p.patient_id.toString() === formData.patient_id.toString())?.last_name || ''\r\n                      }\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-500\">Patient ID: {formData.patient_id}</p>\r\n                  </div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"text-sm text-blue-600 hover:text-blue-800\"\r\n                    onClick={() => setFormData(prev => ({ ...prev, patient_id: '' }))}\r\n                  >\r\n                    Change\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Doctor Selection */}\r\n            <div className=\"mb-6\">\r\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Doctor Information</h2>\r\n              \r\n              <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2 mb-4\">\r\n                <div>\r\n                  <label htmlFor=\"specialization\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Specialization\r\n                  </label>\r\n                  <select\r\n                    id=\"specialization\"\r\n                    value={selectedSpecialization}\r\n                    onChange={handleSpecializationChange}\r\n                    className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\r\n                  >\r\n                    <option value=\"\">All Specializations</option>\r\n                    {specializations.map((spec) => (\r\n                      <option key={spec} value={spec}>{spec}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                \r\n                <div>\r\n                  <label htmlFor=\"doctor_id\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    Doctor *\r\n                  </label>\r\n                  <select\r\n                    id=\"doctor_id\"\r\n                    name=\"doctor_id\"\r\n                    value={formData.doctor_id}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\r\n                  >\r\n                    <option value=\"\">Select a doctor</option>\r\n                    {doctors.map((doctor) => (\r\n                      <option key={doctor.id} value={doctor.id}>\r\n                        Dr. {doctor.first_name} {doctor.last_name} - {doctor.specialization}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Appointment Details */}\r\n            <div className=\"mb-6\">\r\n              <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Appointment Details</h2>\r\n              \r\n              <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\r\n                <div>\r\n                  <label htmlFor=\"appointment_date\" className=\"block text-sm font-medium text-gray-700\">\r\n                    Date & Time *\r\n                  </label>\r\n                  <input\r\n                    type=\"datetime-local\"\r\n                    id=\"appointment_date\"\r\n                    name=\"appointment_date\"\r\n                    value={formData.appointment_date}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                    className=\"mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label htmlFor=\"status\" className=\"block text-sm font-medium text-gray-700\">\r\n                    Status\r\n                  </label>\r\n                  <select\r\n                    id=\"status\"\r\n                    name=\"status\"\r\n                    value={formData.status}\r\n                    onChange={handleInputChange}\r\n                    className=\"mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                  >\r\n                    <option value=\"Scheduled\">Scheduled</option>\r\n                    <option value=\"Completed\">Completed</option>\r\n                    <option value=\"Cancelled\">Cancelled</option>\r\n                    <option value=\"No-Show\">No-Show</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <div className=\"md:col-span-2\">\r\n                  <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700\">\r\n                    Notes\r\n                  </label>\r\n                  <textarea\r\n                    id=\"notes\"\r\n                    name=\"notes\"\r\n                    value={formData.notes}\r\n                    onChange={handleInputChange}\r\n                    rows={3}\r\n                    className=\"mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                type=\"submit\"\r\n                disabled={loading}\r\n                className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\r\n              >\r\n                {loading ? 'Creating...' : 'Schedule Appointment'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAppointment;\r\n"
        }
    ]
}