{
    "sourceFile": "frontend/src/pages/Patients/PatientDetails.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1749585577587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1749585577587,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, Link, useSearchParams } from 'react-router-dom';\r\nimport { patientsApi } from '../../services/api';\r\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\r\nimport PatientForm from '../../components/patients/PatientForm';\r\nimport DeleteConfirmationModal from '../../components/common/DeleteConfirmationModal';\r\n\r\nconst PatientDetails = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const isEditMode = searchParams.get('edit') === 'true';\r\n  \r\n  const [patient, setPatient] = useState(null);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [medicalRecords, setMedicalRecords] = useState([]);\r\n  const [billing, setBilling] = useState([]);\r\n  const [admissions, setAdmissions] = useState([]);\r\n  const [summary, setSummary] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchPatientDetails = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await patientsApi.getById(id);\r\n        \r\n        if (response.success) {\r\n          setPatient(response.data.patient);\r\n          setAppointments(response.data.appointments);\r\n          setMedicalRecords(response.data.medicalRecords);\r\n          setBilling(response.data.billing);\r\n          setAdmissions(response.data.admissions);\r\n          setSummary(response.data.summary);\r\n        } else {\r\n          throw new Error(response.error || 'Failed to fetch patient details');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching patient details:', err);\r\n        setError('Failed to load patient details. Please try again.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPatientDetails();\r\n  }, [id]);\r\n\r\n  const handleUpdatePatient = async (updatedData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await patientsApi.update(id, updatedData);\r\n      \r\n      if (response.success) {\r\n        setPatient(response.data.patient);\r\n        navigate(`/patients/${id}`);\r\n      } else {\r\n        throw new Error(response.error || 'Failed to update patient');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error updating patient:', err);\r\n      setError('Failed to update patient. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeletePatient = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await patientsApi.delete(id);\r\n      \r\n      if (response.success) {\r\n        navigate('/patients');\r\n      } else {\r\n        throw new Error(response.error || 'Failed to delete patient');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error deleting patient:', err);\r\n      setError('Failed to delete patient. ' + (err.message || 'Please try again.'));\r\n    } finally {\r\n      setLoading(false);\r\n      setShowDeleteModal(false);\r\n    }\r\n  };\r\n\r\n  if (loading && !patient) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (error && !patient) {\r\n    return (\r\n      <div className=\"bg-red-50 border-l-4 border-red-400 p-4\">\r\n        <div className=\"flex\">\r\n          <div className=\"ml-3\">\r\n            <p className=\"text-sm text-red-700\">{error}</p>\r\n            <button\r\n              onClick={() => navigate('/patients')}\r\n              className=\"mt-2 text-sm text-red-700 underline\"\r\n            >\r\n              Back to patients list\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!patient) {\r\n    return (\r\n      <div className=\"text-center py-10\">\r\n        <p className=\"text-lg text-gray-600\">Patient not found</p>\r\n        <Link to=\"/patients\" className=\"mt-4 text-blue-600 hover:underline\">\r\n          Back to patients list\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isEditMode) {\r\n    return (\r\n      <div>\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-2xl font-semibold text-gray-900\">Edit Patient</h1>\r\n          <button\r\n            onClick={() => navigate(`/patients/${id}`)}\r\n            className=\"px-4 py-2 text-sm text-gray-600 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n        <PatientForm \r\n          initialData={patient} \r\n          onSubmit={handleUpdatePatient} \r\n          isEditing={true}\r\n          error={error}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error && (\r\n        <div className=\"mb-4 bg-red-50 border-l-4 border-red-400 p-4\">\r\n          <p className=\"text-sm text-red-700\">{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-semibold text-gray-900\">\r\n          {patient.first_name} {patient.last_name}\r\n        </h1>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={() => navigate(`/patients/${id}?edit=true`)}\r\n            className=\"px-4 py-2 text-sm text-white bg-blue-600 rounded-md hover:bg-blue-700\"\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            onClick={() => setShowDeleteModal(true)}\r\n            className=\"px-4 py-2 text-sm text-white bg-red-600 rounded-md hover:bg-red-700\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg mb-6\">\r\n        <div className=\"px-4 py-5 sm:px-6\">\r\n          <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Patient Information</h3>\r\n        </div>\r\n        <div className=\"border-t border-gray-200\">\r\n          <dl>\r\n            <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n              <dt className=\"text-sm font-medium text-gray-500\">Full name</dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n                {patient.first_name} {patient.last_name}\r\n              </dd>\r\n            </div>\r\n            <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n              <dt className=\"text-sm font-medium text-gray-500\">Gender</dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{patient.gender}</dd>\r\n            </div>\r\n            <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n              <dt className=\"text-sm font-medium text-gray-500\">Date of birth</dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n                {new Date(patient.date_of_birth).toLocaleDateString()} (Age: {patient.age})\r\n              </dd>\r\n            </div>\r\n            <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n              <dt className=\"text-sm font-medium text-gray-500\">Email address</dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{patient.email || 'Not provided'}</dd>\r\n            </div>\r\n            <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n              <dt className=\"text-sm font-medium text-gray-500\">Phone number</dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{patient.phone_number || 'Not provided'}</dd>\r\n            </div>\r\n            <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n              <dt className=\"text-sm font-medium text-gray-500\">Address</dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n                {patient.address || 'Not provided'}\r\n              </dd>\r\n            </div>\r\n          </dl>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Patient Summary */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n        <div className=\"bg-blue-50 border-l-4 border-blue-400 p-4 rounded-lg\">\r\n          <p className=\"text-sm font-medium text-blue-700\">Appointments</p>\r\n          <p className=\"mt-1 text-3xl font-semibold text-blue-900\">{summary.totalAppointments || 0}</p>\r\n        </div>\r\n        <div className=\"bg-green-50 border-l-4 border-green-400 p-4 rounded-lg\">\r\n          <p className=\"text-sm font-medium text-green-700\">Medical Records</p>\r\n          <p className=\"mt-1 text-3xl font-semibold text-green-900\">{summary.totalMedicalRecords || 0}</p>\r\n        </div>\r\n        <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded-lg\">\r\n          <p className=\"text-sm font-medium text-yellow-700\">Billing Status</p>\r\n          <p className=\"mt-1 text-3xl font-semibold text-yellow-900\">${summary.outstandingBalance || '0.00'}</p>\r\n          <p className=\"text-xs text-yellow-700\">Outstanding balance</p>\r\n        </div>\r\n        <div className=\"bg-purple-50 border-l-4 border-purple-400 p-4 rounded-lg\">\r\n          <p className=\"text-sm font-medium text-purple-700\">Admission Status</p>\r\n          <p className=\"mt-1 text-xl font-semibold text-purple-900\">\r\n            {summary.currentlyAdmitted ? 'Currently Admitted' : 'Not Admitted'}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Appointments */}\r\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg mb-6\">\r\n        <div className=\"px-4 py-5 sm:px-6 flex justify-between items-center\">\r\n          <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Appointments</h3>\r\n          <Link\r\n            to={`/appointments/add?patientId=${id}`}\r\n            className=\"px-4 py-2 text-sm text-white bg-blue-600 rounded-md hover:bg-blue-700\"\r\n          >\r\n            Schedule\r\n          </Link>\r\n        </div>\r\n        <div className=\"border-t border-gray-200 overflow-x-auto\">\r\n          {appointments.length > 0 ? (\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Date & Time\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Doctor\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Specialization\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Status\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {appointments.map((appointment) => (\r\n                  <tr key={appointment.id}>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {new Date(appointment.appointment_date).toLocaleString()}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      Dr. {appointment.doctor_first_name} {appointment.doctor_last_name}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">{appointment.specialization}</td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span\r\n                        className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\r\n                          ${appointment.status === 'Completed' ? 'bg-green-100 text-green-800' : \r\n                            appointment.status === 'Cancelled' ? 'bg-red-100 text-red-800' : \r\n                            'bg-blue-100 text-blue-800'}`}\r\n                      >\r\n                        {appointment.status}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                      <Link\r\n                        to={`/appointments/${appointment.id}`}\r\n                        className=\"text-blue-600 hover:text-blue-900\"\r\n                      >\r\n                        View\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <div className=\"text-center py-4 text-gray-500\">No appointments found</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Medical Records */}\r\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg mb-6\">\r\n        <div className=\"px-4 py-5 sm:px-6 flex justify-between items-center\">\r\n          <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Medical Records</h3>\r\n          <button\r\n            className=\"px-4 py-2 text-sm text-white bg-blue-600 rounded-md hover:bg-blue-700\"\r\n            onClick={() => navigate(`/medical-records?patientId=${id}`)}\r\n          >\r\n            View All\r\n          </button>\r\n        </div>\r\n        <div className=\"border-t border-gray-200\">\r\n          {medicalRecords.length > 0 ? (\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Date\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Diagnosis\r\n                    </th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Treatment\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {medicalRecords.slice(0, 5).map((record) => (\r\n                    <tr key={record.id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        {new Date(record.record_date).toLocaleDateString()}\r\n                      </td>\r\n                      <td className=\"px-6 py-4\">{record.diagnosis}</td>\r\n                      <td className=\"px-6 py-4\">{record.treatment}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center py-4 text-gray-500\">No medical records found</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      <DeleteConfirmationModal \r\n        isOpen={showDeleteModal}\r\n        onClose={() => setShowDeleteModal(false)}\r\n        onConfirm={handleDeletePatient}\r\n        title=\"Delete Patient\"\r\n        message={`Are you sure you want to delete ${patient.first_name} ${patient.last_name}? This action cannot be undone.`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientDetails;\r\n"
        }
    ]
}