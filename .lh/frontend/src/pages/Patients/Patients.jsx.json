{
    "sourceFile": "frontend/src/pages/Patients/Patients.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1749585575957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1749585575957,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { patientsApi } from '../../services/api';\r\nimport { SearchIcon, PlusIcon } from '../../icons';\r\nimport Pagination from '../../components/common/Pagination';\r\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\r\n\r\nconst Patients = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 1,\r\n    totalPages: 0,\r\n    totalCount: 0,\r\n    limit: 10\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [sortBy, setSortBy] = useState('last_name');\r\n  const [sortOrder, setSortOrder] = useState('ASC');\r\n\r\n  const fetchPatients = async (page = 1, search = searchQuery, sort = sortBy, order = sortOrder) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await patientsApi.getAll({\r\n        page,\r\n        limit: pagination.limit,\r\n        search,\r\n        sortBy: sort,\r\n        sortOrder: order\r\n      });\r\n      \r\n      if (response.success) {\r\n        setPatients(response.data.patients);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        throw new Error(response.error || 'Failed to fetch patients');\r\n      }\r\n      \r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Error fetching patients:', err);\r\n      setError('Failed to load patients. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPatients();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    fetchPatients(1, searchQuery);\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    const newSortOrder = field === sortBy && sortOrder === 'ASC' ? 'DESC' : 'ASC';\r\n    setSortBy(field);\r\n    setSortOrder(newSortOrder);\r\n    fetchPatients(1, searchQuery, field, newSortOrder);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    fetchPatients(page, searchQuery, sortBy, sortOrder);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sm:flex sm:items-center justify-between mb-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-semibold text-gray-900\">Patients</h1>\r\n          <p className=\"mt-2 text-sm text-gray-700\">\r\n            A list of all patients in the hospital system\r\n          </p>\r\n        </div>\r\n        <Link\r\n          to=\"/patients/add\"\r\n          className=\"mt-4 sm:mt-0 inline-flex items-center justify-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n        >\r\n          <PlusIcon className=\"h-4 w-4 mr-2\" />\r\n          Add Patient\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n        {/* Search and filter bar */}\r\n        <div className=\"px-4 py-5 sm:p-6 border-b border-gray-200\">\r\n          <form onSubmit={handleSearch} className=\"sm:flex sm:items-center\">\r\n            <div className=\"w-full sm:max-w-xs\">\r\n              <label htmlFor=\"search\" className=\"sr-only\">Search patients</label>\r\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <SearchIcon className=\"h-5 w-5 text-gray-400\" />\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  id=\"search\"\r\n                  className=\"focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 pr-12 sm:text-sm border-gray-300 rounded-md\"\r\n                  placeholder=\"Search by name, email...\"\r\n                  value={searchQuery}\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"mt-3 w-full inline-flex items-center justify-center px-4 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n            >\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Error message */}\r\n        {error && (\r\n          <div className=\"bg-red-50 border-l-4 border-red-400 p-4\">\r\n            <div className=\"flex\">\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm text-red-700\">{error}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Table */}\r\n        <div className=\"overflow-x-auto\">\r\n          {loading ? (\r\n            <LoadingSpinner />\r\n          ) : (\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n                    onClick={() => handleSort('last_name')}\r\n                  >\r\n                    Name\r\n                    {sortBy === 'last_name' && (\r\n                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n                    )}\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n                    onClick={() => handleSort('gender')}\r\n                  >\r\n                    Gender\r\n                    {sortBy === 'gender' && (\r\n                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n                    )}\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n                    onClick={() => handleSort('date_of_birth')}\r\n                  >\r\n                    Age / DOB\r\n                    {sortBy === 'date_of_birth' && (\r\n                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n                    )}\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                  >\r\n                    Contact\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                  >\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {patients.length > 0 ? (\r\n                  patients.map((patient) => (\r\n                    <tr key={patient.patient_id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          <div>\r\n                            <div className=\"text-sm font-medium text-gray-900\">\r\n                              {patient.last_name}, {patient.first_name}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">{patient.gender}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">{patient.age} years</div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          {new Date(patient.date_of_birth).toLocaleDateString()}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">{patient.phone_number}</div>\r\n                        <div className=\"text-sm text-gray-500\">{patient.email}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        <Link\r\n                          to={`/patients/${patient.patient_id}`}\r\n                          className=\"text-blue-600 hover:text-blue-900 mr-4\"\r\n                        >\r\n                          View\r\n                        </Link>\r\n                        <Link\r\n                          to={`/patients/${patient.patient_id}?edit=true`}\r\n                          className=\"text-indigo-600 hover:text-indigo-900\"\r\n                        >\r\n                          Edit\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"5\" className=\"px-6 py-4 text-center text-gray-500\">\r\n                      No patients found\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n\r\n        {/* Pagination */}\r\n        {!loading && patients.length > 0 && (\r\n          <Pagination\r\n            currentPage={pagination.currentPage}\r\n            totalPages={pagination.totalPages}\r\n            onPageChange={handlePageChange}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n"
        }
    ]
}