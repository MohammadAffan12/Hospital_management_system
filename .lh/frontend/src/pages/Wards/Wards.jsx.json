{
    "sourceFile": "frontend/src/pages/Wards/Wards.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1749585583603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1749586381487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,14 @@\n     if (rate < 80) return 'text-yellow-600';\r\n     return 'text-red-600';\r\n   };\r\n \r\n+  const getOccupancyBarClass = (rate) => {\r\n+    if (rate < 50) return 'bg-green-500';\r\n+    if (rate < 80) return 'bg-yellow-500';\r\n+    return 'bg-red-500';\r\n+  };\r\n+\r\n   return (\r\n     <div>\r\n       <div className=\"sm:flex sm:items-center justify-between mb-6\">\r\n         <div>\r\n@@ -123,8 +129,36 @@\n             </div>\r\n           </div>\r\n         )}\r\n \r\n+        {/* Dashboard Summary Cards */}\r\n+        {!loading && wards.length > 0 && (\r\n+          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 p-4\">\r\n+            <div className=\"bg-white p-4 rounded-lg shadow\">\r\n+              <h3 className=\"text-sm font-medium text-gray-500\">Total Wards</h3>\r\n+              <p className=\"text-2xl font-semibold text-gray-900\">{wards.length}</p>\r\n+            </div>\r\n+            <div className=\"bg-white p-4 rounded-lg shadow\">\r\n+              <h3 className=\"text-sm font-medium text-gray-500\">Total Capacity</h3>\r\n+              <p className=\"text-2xl font-semibold text-gray-900\">\r\n+                {wards.reduce((sum, ward) => sum + ward.capacity, 0)} beds\r\n+              </p>\r\n+            </div>\r\n+            <div className=\"bg-white p-4 rounded-lg shadow\">\r\n+              <h3 className=\"text-sm font-medium text-gray-500\">Current Occupancy</h3>\r\n+              <p className=\"text-2xl font-semibold text-gray-900\">\r\n+                {wards.reduce((sum, ward) => sum + ward.current_occupancy, 0)} patients\r\n+              </p>\r\n+            </div>\r\n+            <div className=\"bg-white p-4 rounded-lg shadow\">\r\n+              <h3 className=\"text-sm font-medium text-gray-500\">Available Beds</h3>\r\n+              <p className=\"text-2xl font-semibold text-gray-900\">\r\n+                {wards.reduce((sum, ward) => sum + ward.available_beds, 0)} available\r\n+              </p>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n         {/* Wards Overview */}\r\n         <div className=\"overflow-x-auto\">\r\n           {loading ? (\r\n             <LoadingSpinner />\r\n@@ -200,9 +234,9 @@\n                           {ward.occupancy_rate}% ({ward.current_occupancy}/{ward.capacity})\r\n                         </div>\r\n                         <div className=\"w-full bg-gray-200 rounded-full h-2.5 mt-1\">\r\n                           <div \r\n-                            className={`h-2.5 rounded-full ${ward.occupancy_rate < 50 ? 'bg-green-500' : ward.occupancy_rate < 80 ? 'bg-yellow-500' : 'bg-red-500'}`} \r\n+                            className={`h-2.5 rounded-full ${getOccupancyBarClass(ward.occupancy_rate)}`} \r\n                             style={{width: `${ward.occupancy_rate}%`}}\r\n                           ></div>\r\n                         </div>\r\n                       </td>\r\n"
                }
            ],
            "date": 1749585583603,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { wardsApi } from '../../services/api';\r\nimport { SearchIcon } from '../../icons';\r\nimport Pagination from '../../components/common/Pagination';\r\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\r\n\r\nconst Wards = () => {\r\n  const [wards, setWards] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 1,\r\n    totalPages: 0,\r\n    totalCount: 0,\r\n    limit: 10\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [sortBy, setSortBy] = useState('ward_name');\r\n  const [sortOrder, setSortOrder] = useState('ASC');\r\n\r\n  const fetchWards = async (page = 1, search = searchQuery, sort = sortBy, order = sortOrder) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await wardsApi.getAll({\r\n        page,\r\n        limit: pagination.limit,\r\n        search,\r\n        sortBy: sort,\r\n        sortOrder: order\r\n      });\r\n      \r\n      if (response.success) {\r\n        setWards(response.data.wards);\r\n        setPagination(response.data.pagination);\r\n      } else {\r\n        throw new Error(response.error || 'Failed to fetch wards');\r\n      }\r\n      \r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Error fetching wards:', err);\r\n      setError('Failed to load wards. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchWards();\r\n  }, []);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    fetchWards(1, searchQuery);\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    const newSortOrder = field === sortBy && sortOrder === 'ASC' ? 'DESC' : 'ASC';\r\n    setSortBy(field);\r\n    setSortOrder(newSortOrder);\r\n    fetchWards(1, searchQuery, field, newSortOrder);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    fetchWards(page);\r\n  };\r\n\r\n  const getOccupancyClass = (rate) => {\r\n    if (rate < 50) return 'text-green-600';\r\n    if (rate < 80) return 'text-yellow-600';\r\n    return 'text-red-600';\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"sm:flex sm:items-center justify-between mb-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-semibold text-gray-900\">Hospital Wards</h1>\r\n          <p className=\"mt-2 text-sm text-gray-700\">\r\n            View and manage hospital wards and their occupancy\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n        {/* Search bar */}\r\n        <div className=\"px-4 py-5 sm:p-6 border-b border-gray-200\">\r\n          <form onSubmit={handleSearch} className=\"sm:flex sm:items-center\">\r\n            <div className=\"w-full sm:max-w-xs\">\r\n              <label htmlFor=\"search\" className=\"sr-only\">Search wards</label>\r\n              <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                  <SearchIcon className=\"h-5 w-5 text-gray-400\" />\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  id=\"search\"\r\n                  className=\"focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 pr-12 sm:text-sm border-gray-300 rounded-md\"\r\n                  placeholder=\"Search by name or type...\"\r\n                  value={searchQuery}\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"mt-3 w-full inline-flex items-center justify-center px-4 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n            >\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Error message */}\r\n        {error && (\r\n          <div className=\"bg-red-50 border-l-4 border-red-400 p-4\">\r\n            <div className=\"flex\">\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm text-red-700\">{error}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Wards Overview */}\r\n        <div className=\"overflow-x-auto\">\r\n          {loading ? (\r\n            <LoadingSpinner />\r\n          ) : (\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n                    onClick={() => handleSort('ward_name')}\r\n                  >\r\n                    Ward Name\r\n                    {sortBy === 'ward_name' && (\r\n                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n                    )}\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n                    onClick={() => handleSort('ward_type')}\r\n                  >\r\n                    Type\r\n                    {sortBy === 'ward_type' && (\r\n                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n                    )}\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                  >\r\n                    Capacity\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\r\n                    onClick={() => handleSort('occupancy_rate')}\r\n                  >\r\n                    Occupancy\r\n                    {sortBy === 'occupancy_rate' && (\r\n                      <span className=\"ml-1\">{sortOrder === 'ASC' ? '↑' : '↓'}</span>\r\n                    )}\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                  >\r\n                    Available Beds\r\n                  </th>\r\n                  <th\r\n                    scope=\"col\"\r\n                    className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                  >\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {wards.length > 0 ? (\r\n                  wards.map((ward) => (\r\n                    <tr key={ward.ward_id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">{ward.ward_name}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">{ward.ward_type}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">{ward.capacity} beds</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className={`text-sm font-medium ${getOccupancyClass(ward.occupancy_rate)}`}>\r\n                          {ward.occupancy_rate}% ({ward.current_occupancy}/{ward.capacity})\r\n                        </div>\r\n                        <div className=\"w-full bg-gray-200 rounded-full h-2.5 mt-1\">\r\n                          <div \r\n                            className={`h-2.5 rounded-full ${ward.occupancy_rate < 50 ? 'bg-green-500' : ward.occupancy_rate < 80 ? 'bg-yellow-500' : 'bg-red-500'}`} \r\n                            style={{width: `${ward.occupancy_rate}%`}}\r\n                          ></div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm text-gray-900\">{ward.available_beds} available</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                        <Link\r\n                          to={`/wards/${ward.ward_id}`}\r\n                          className=\"text-blue-600 hover:text-blue-900\"\r\n                        >\r\n                          View Details\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"6\" className=\"px-6 py-4 text-center text-gray-500\">\r\n                      No wards found\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n\r\n        {/* Pagination */}\r\n        {!loading && wards.length > 0 && (\r\n          <Pagination\r\n            currentPage={pagination.currentPage}\r\n            totalPages={pagination.totalPages}\r\n            onPageChange={handlePageChange}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wards;\r\n"
        }
    ]
}