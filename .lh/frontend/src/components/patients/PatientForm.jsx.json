{
    "sourceFile": "frontend/src/components/patients/PatientForm.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1749585583051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1749585583051,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\n\r\nconst PatientForm = ({ initialData = {}, onSubmit, isEditing = false, error }) => {\r\n  const [formData, setFormData] = useState({\r\n    first_name: initialData.first_name || '',\r\n    last_name: initialData.last_name || '',\r\n    gender: initialData.gender === 'Male' ? 'M' : initialData.gender === 'Female' ? 'F' : '',\r\n    date_of_birth: initialData.date_of_birth ? new Date(initialData.date_of_birth).toISOString().split('T')[0] : '',\r\n    phone_number: initialData.phone_number || '',\r\n    email: initialData.email || '',\r\n    address: initialData.address || '',\r\n  });\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    \r\n    // Clear error when field is updated\r\n    if (formErrors[name]) {\r\n      setFormErrors({ ...formErrors, [name]: null });\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    if (!formData.first_name.trim()) errors.first_name = 'First name is required';\r\n    if (!formData.last_name.trim()) errors.last_name = 'Last name is required';\r\n    if (!formData.gender) errors.gender = 'Gender is required';\r\n    if (!formData.date_of_birth) errors.date_of_birth = 'Date of birth is required';\r\n    \r\n    if (formData.email && !/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      errors.email = 'Invalid email address';\r\n    }\r\n    \r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const errors = validateForm();\r\n    \r\n    if (Object.keys(errors).length > 0) {\r\n      setFormErrors(errors);\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      await onSubmit(formData);\r\n    } catch (error) {\r\n      console.error('Form submission error:', error);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white shadow rounded-lg overflow-hidden\">\r\n      {error && (\r\n        <div className=\"bg-red-50 border-l-4 border-red-400 p-4 mb-4\">\r\n          <p className=\"text-sm text-red-700\">{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} className=\"p-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {/* First Name */}\r\n          <div>\r\n            <label htmlFor=\"first_name\" className=\"block text-sm font-medium text-gray-700\">\r\n              First Name *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"first_name\"\r\n              id=\"first_name\"\r\n              value={formData.first_name}\r\n              onChange={handleChange}\r\n              className={`mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md ${\r\n                formErrors.first_name ? 'border-red-500' : ''\r\n              }`}\r\n              required\r\n            />\r\n            {formErrors.first_name && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{formErrors.first_name}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Last Name */}\r\n          <div>\r\n            <label htmlFor=\"last_name\" className=\"block text-sm font-medium text-gray-700\">\r\n              Last Name *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"last_name\"\r\n              id=\"last_name\"\r\n              value={formData.last_name}\r\n              onChange={handleChange}\r\n              className={`mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md ${\r\n                formErrors.last_name ? 'border-red-500' : ''\r\n              }`}\r\n              required\r\n            />\r\n            {formErrors.last_name && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{formErrors.last_name}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Gender */}\r\n          <div>\r\n            <label htmlFor=\"gender\" className=\"block text-sm font-medium text-gray-700\">\r\n              Gender *\r\n            </label>\r\n            <select\r\n              name=\"gender\"\r\n              id=\"gender\"\r\n              value={formData.gender}\r\n              onChange={handleChange}\r\n              className={`mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md ${\r\n                formErrors.gender ? 'border-red-500' : ''\r\n              }`}\r\n              required\r\n            >\r\n              <option value=\"\">Select gender</option>\r\n              <option value=\"M\">Male</option>\r\n              <option value=\"F\">Female</option>\r\n            </select>\r\n            {formErrors.gender && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{formErrors.gender}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Date of Birth */}\r\n          <div>\r\n            <label htmlFor=\"date_of_birth\" className=\"block text-sm font-medium text-gray-700\">\r\n              Date of Birth *\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"date_of_birth\"\r\n              id=\"date_of_birth\"\r\n              value={formData.date_of_birth}\r\n              onChange={handleChange}\r\n              className={`mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md ${\r\n                formErrors.date_of_birth ? 'border-red-500' : ''\r\n              }`}\r\n              required\r\n            />\r\n            {formErrors.date_of_birth && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{formErrors.date_of_birth}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Phone Number */}\r\n          <div>\r\n            <label htmlFor=\"phone_number\" className=\"block text-sm font-medium text-gray-700\">\r\n              Phone Number\r\n            </label>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"phone_number\"\r\n              id=\"phone_number\"\r\n              value={formData.phone_number}\r\n              onChange={handleChange}\r\n              className=\"mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n            />\r\n          </div>\r\n\r\n          {/* Email */}\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n              Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              className={`mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md ${\r\n                formErrors.email ? 'border-red-500' : ''\r\n              }`}\r\n            />\r\n            {formErrors.email && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{formErrors.email}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Address */}\r\n          <div className=\"md:col-span-2\">\r\n            <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700\">\r\n              Address\r\n            </label>\r\n            <textarea\r\n              name=\"address\"\r\n              id=\"address\"\r\n              rows={3}\r\n              value={formData.address}\r\n              onChange={handleChange}\r\n              className=\"mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6 flex justify-end\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isSubmitting}\r\n            className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\r\n          >\r\n            {isSubmitting ? 'Saving...' : isEditing ? 'Update Patient' : 'Add Patient'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientForm;\r\n"
        }
    ]
}